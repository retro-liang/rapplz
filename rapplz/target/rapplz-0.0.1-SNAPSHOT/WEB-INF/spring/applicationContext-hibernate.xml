<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
                xmlns:tx="http://www.springframework.org/schema/tx"
                xsi:schemaLocation="
                        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- import the dataSource definition -->
    <import resource="applicationContext-dataSource.xml"/>
    
    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, Hibernate-related settings for the sessionFactory definition below) -->
	<context:property-placeholder location="classpath:db/jdbc.properties"/>
	
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.ehcache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
			</props>
		</property>
		<!-- 
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
				</entry>
			</map>
		</property>
		 -->
		<property name="annotatedClasses">
			<list>
				<value>com.retro.rapplz.db.entity.BaseEntity</value>
				<value>com.retro.rapplz.db.entity.BaseMessage</value>
				<value>com.retro.rapplz.db.entity.OS</value>
				<value>com.retro.rapplz.db.entity.App</value>
				<value>com.retro.rapplz.db.entity.Device</value>
				<value>com.retro.rapplz.db.entity.Category</value>
				<value>com.retro.rapplz.db.entity.AccountType</value>
				<value>com.retro.rapplz.db.entity.AccountRole</value>
				<value>com.retro.rapplz.db.entity.AccountStatus</value>
				<value>com.retro.rapplz.db.entity.User</value>
				<value>com.retro.rapplz.db.entity.Activity</value>
				<value>com.retro.rapplz.db.entity.Follow</value>
				<value>com.retro.rapplz.db.entity.Recommendation</value>
				<value>com.retro.rapplz.db.entity.AppComment</value>
				<value>com.retro.rapplz.db.entity.Review</value>
				<value>com.retro.rapplz.db.entity.ReviewComment</value>
				<value>com.retro.rapplz.db.entity.TagName</value>
				<value>com.retro.rapplz.db.entity.Tag</value>
			</list>
		</property>
	</bean>
	
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->
	
	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) -->
	<!--
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>
	-->
	
	
	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->
	
	<bean id="osDao" class="com.retro.rapplz.db.dao.OSDaoImpl" />
	<bean id="appDao" class="com.retro.rapplz.db.dao.AppDaoImpl" />
	<bean id="userDao" class="com.retro.rapplz.db.dao.UserDaoImpl" />
	<bean id="accountRoleDao" class="com.retro.rapplz.db.dao.AccountRoleDaoImpl" />
	<bean id="accountTypeDao" class="com.retro.rapplz.db.dao.AccountTypeDaoImpl" />
	<bean id="accountStatusDao" class="com.retro.rapplz.db.dao.AccountStatusDaoImpl" />
	
	<!--
		Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	-->
	<context:annotation-config/>
	
	<!--
		Instruct Spring to perform declarative transaction management automatically on annotated classes.
	-->
	<tx:annotation-driven/>
	
	<!--
		Exporter that exposes the Hibernate statistics service via JMX. Autodetects the service MBean, using its bean name as JMX object name.
	-->
	<!-- <context:mbean-export/> -->
	
	<!-- Hibernate's JMX statistics service -->
	<!-- <bean name="appDao:type=HibernateStatistics" class="org.hibernate.jmx.StatisticsService" autowire="byName"/> -->

</beans>