CREATE DATABASE IF NOT EXISTS rapplz;
GRANT ALL PRIVILEGES ON rapplz.* TO root@localhost IDENTIFIED BY 'admin';

USE rapplz;

CREATE TABLE IF NOT EXISTS screenshot
(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	type VARCHAR(20) NOT NULL,
	url VARCHAR(255) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (app_id) REFERENCES app(id),
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS app_screenshot
(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	app_id BIGINT NOT NULL,
	screenshot_id BIGINT NOT NULL,
	FOREIGN KEY (app_id) REFERENCES app(id),
	FOREIGN KEY (screenshot_id) REFERENCES screenshot(id),
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS account_status
(
	id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS account_type
(
	id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS category
(
	id INT(4) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS app_category
(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,	
	app_id BIGINT NOT NULL,
	category_id INT(4) UNSIGNED NOT NULL,
	FOREIGN KEY (app_id) REFERENCES app(id),
	FOREIGN KEY (category_id) REFERENCES category(id),
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS device
(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS os
(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS follow
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	follower_user_id BIGINT NOT NULL,
	following_user_id BIGINT NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (follower_user_id) REFERENCES user(id),
	FOREIGN KEY (following_user_id) REFERENCES user(id),
	INDEX(follower_user_id,following_user_id)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS recommendation
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	app_id BIGINT NOT NULL,
	from_user_id BIGINT NOT NULL,
	to_user_id BIGINT NOT NULL,
	message VARCHAR(max),
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (app_id) REFERENCES app(id),
	FOREIGN KEY (from_user_id) REFERENCES app(id),
	FOREIGN KEY (to_user_id) REFERENCES app(id),
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS app_comment
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	author_user_id BIGINT NOT NULL,
	app_id BIGINT NOT NULL,
	content VARCHAR(max) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (author_user_id) REFERENCES user(id),
	FOREIGN KEY (app_id) REFERENCES app(id),
	INDEX(app_id,author_user_id)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS review
(
	id BIGINT(4) NOT NULL AUTO_INCREMENT PRIMARY KEY,
	author_user_id BIGINT NOT NULL,
	app_id BIGINT NOT NULL,
	content VARCHAR(max) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (author_user_id) REFERENCES user(id),
	FOREIGN KEY (app_id) REFERENCES app(id),
	INDEX(app_id,author_user_id)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS review_comment
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	author_user_id BIGINT NOT NULL,
	review_id BIGINT NOT NULL,
	content VARCHAR(max) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (author_user_id) REFERENCES user(id),
	FOREIGN KEY (review_id) REFERENCES review(id),
	INDEX(app_id,author_user_id)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS activity
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id BIGINT NOT NULL,
	activity_type VARCHAR(20) NOT NULL,
	activity_result VARCHAR(20) NOT NULL,
	content VARCHAR(255) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (user_id) REFERENCES user(id),
	INDEX(user_id,activity_type,activity_result)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS app
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	raw_id VARCHAR(255) NOT NULL,
	name VARCHAR(80) NOT NULL,
	description VARCHAR(MAX),
	os_id INT NOT NULL,
	app_store_url VARCHAR(255) NOT NULL,
	icon_url VARCHAR(255) NOT NULL, 
	price DECIMAL,
	version VARCHAR(10),
	company_id VARCHAR(80),
	company_name VARCHAR(80),
	company_url VARCHAR(80),
	release_date VARCHAR(30),
	app_store_rating REAL,
	app_store_rating_count INT,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (os_id) REFERENCES os(id),
	INDEX(name);
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS tag_name
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS tag
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	author_user_id BIGING NOT NULL,
	app_id BIGING NOT NULL,
	tag_name_id BIGINT NOT NULL,
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (author_user_id) REFERENCES user(id),
	FOREIGN KEY (app_id) REFERENCES app(id),
	FOREIGN KEY (tag_name_id) REFERENCES tag_name(id),
	INDEX(name)
)ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS user
(
	id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	account_type_id INT(4) UNSIGNED NOT NULL,
	account_status_id INT(4) UNSIGNED NOT NULL,
	email VARCHAR(80) NOT NULL,
	password VARCHAR(30) NOT NULL,
	first_name VARCHAR(30),
	last_name VARCHAR(30),
	created_date DATETIME NOT NULL,
	modified_date TIMESTAMP NOT NULL,
	FOREIGN KEY (account_type_id) REFERENCES account_type(id),
	FOREIGN KEY (account_status_id) REFERENCES account_status(id),
	INDEX(name)
)ENGINE=InnoDB;